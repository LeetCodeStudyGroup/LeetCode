class Solution {
public:
    vector<string> split(const string &source, const char &delim)
    {
        stringstream ss(source);
        string token;
        vector<string> ans;
        while (getline(ss, token, delim))
            ans.push_back(token);
        return ans;
    }
    
    int compareVersion(string version1, string version2) {
        if (version1.empty() || version2.empty())
            return 0;
        
        vector<string> str1 = split(version1, '.');
        vector<string> str2 = split(version2, '.');
        
        bool isLongVersion1 = str1.size() > str2.size()? true: false;
        
        int i;
        for (i=0; i<min(str1.size(), str2.size()); i++) {
            if (stoi(str1[i]) > stoi(str2[i]))
                return 1;
            else if (stoi(str1[i]) < stoi(str2[i]))
                return -1;
        }
        
        if (isLongVersion1) {
            for (int j=i; j < str1.size(); j++) { 
                if (stoi(str1[j]) != 0)
                    return 1;                }
        } else {
            for (int j=i; j < str2.size(); j++)
                if (stoi(str2[j]) != 0)
                    return -1;
        }
        
        return 0;
    }
};
